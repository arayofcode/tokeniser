name: tokeniser-dev
services:
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      db-dev:
        condition: service_healthy
        restart: true
      flyway-dev:
        condition: service_completed_successfully
    ports:
      - "127.0.0.1:${PORT}:${PORT}"
    environment:
      - PASSPHRASE
      - PORT
      - DB=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db-dev:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    networks:
      - dev-backend-network
      - dev-vault-network
    command: go run main.go
    develop:
      watch:
        - action: sync+restart
          path: src/
          target: /app
        - action: rebuild
          path: src/go.mod
        - action: rebuild
          path: src/go.sum
        - action: rebuild
          path: Dockerfile.dev
        - action: rebuild
          path: compose.dev.yaml
        - action: rebuild
          path: Makefile

  db-dev:
    image: postgres:16.2-alpine3.19
    restart: always
    volumes:
      - dev-pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev-vault-network
      - dev-operations-management
    expose:
      - 5432

  flyway-dev:
    image: flyway/flyway:10.10
    volumes:
      - ./migrations/migration:/migrations
    depends_on:
      db-dev:
        condition: service_healthy
    environment:
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_URL: jdbc:postgresql://db-dev:5432/${POSTGRES_DB}
      FLYWAY_POSTGRESQL_TRANSACTIONAL_LOCK: false
      FLYWAY_DRIVER: org.postgresql.Driver
      FLYWAY_LOCATIONS: filesystem:/migrations
    networks:
      - dev-operations-management
    command: migrate

volumes:
  dev-pgdata:

networks:
  dev-vault-network:
    internal: true
  dev-backend-network:
  dev-operations-management: # To separate operational traffic from external traffic
    internal: true