name: tokeniser
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - flyway
    ports:
      - "8080:8080"
    environment:
      - PASSPHRASE
      - DB=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    networks:
      - backend-network
      - vault-network

  db:
    image: postgres:16.2-alpine3.19
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - vault-network

  flyway:
    image: flyway/flyway:10.10
    volumes:
      - ./database/migration:/migrations
    depends_on:
      - db
    environment:
      FLYWAY_USER: ${POSTGRES_USER}
      FLYWAY_PASSWORD: ${POSTGRES_PASSWORD}
      FLYWAY_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      FLYWAY_POSTGRESQL_TRANSACTIONAL_LOCK: false
      FLYWAY_DRIVER: org.postgresql.Driver
      FLYWAY_LOCATIONS: filesystem:/migrations
    networks:
      - vault-network
    command: migrate

volumes:
  pgdata:

networks:
  vault-network:
  backend-network: